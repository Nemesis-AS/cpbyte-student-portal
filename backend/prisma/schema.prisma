// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @default(uuid())
  name        String
  library_id  String       @unique
  email       String       @unique
  avatar      String?
  role        Role         @default(USER)
  domain_dev  DevDomain
  domain_dsa  DSADomain
  dsaAttendance  Int       @default(0)
  devAttendance  Int       @default(0)
  mentor_dev  String?
  mentor_dsa  String?
  year        Int          @default(1)
  password    String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  attendances Attendance[]
}

model Attendance {
  id        String           @id @default(uuid())
  userId    String
  user      User             @relation(fields: [userId], references: [id], onDelete: Cascade)
  date      DateTime
  status    AttendanceStatus
  subject   Subject
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
}

enum Role {
  ADMIN
  COORDINATOR
  USER
  LEAD
}

enum DevDomain {
  ANDROID
  ARVR
  ML
  WEBDEV
  UIUX
}

enum Subject{
  DSA
  DEV
}

enum DSADomain {
  CPP
  JAVA
}

enum AttendanceStatus {
  PRESENT
  ABSENT_WITHOUT_REASON
  ABSENT_WITH_REASON
}
